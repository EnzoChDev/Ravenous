{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","business","this","props","react_default","a","createElement","className","src","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","_this2","keys","sortByOption","sortByOptionValue","getSortByClass","onClick","handleSortByChange","setState","e","target","value","searchYelp","preventDefault","renderSortByOptions","onChange","placeholder","href","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4TA8BeA,sMAzBJ,IACEC,EAAaC,KAAKC,MAAlBF,SACV,OACCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKP,EAASQ,SAAUC,IAAI,MAEnCN,EAAAC,EAAAC,cAAA,UAAKL,EAASU,MACdP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAIL,EAASW,SACbR,EAAAC,EAAAC,cAAA,SAAIL,EAASY,MACbT,EAAAC,EAAAC,cAAA,SAAIL,EAASa,MAAb,IAAqBb,EAASc,UAEhCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAKL,EAASe,UACdZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUN,EAASgB,QACjCb,EAAAC,EAAAC,cAAA,SAAIL,EAASiB,uBAlBEC,IAAMC,YCcdC,mLAZX,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXL,KAAKC,MAAMmB,WAAWC,IAAI,SAACtB,GACzB,OAAOG,EAAAC,EAAAC,cAACkB,EAAD,CAAUC,IAAKxB,EAASyB,GAAIzB,SAAUA,cANhCkB,IAAMC,WCA3BO,SAAgB,CAClBC,aAAe,aACfC,gBAAiB,SACjBC,gBAAiB,iBAwENC,cApEb,SAAAA,EAAY5B,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA6B,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnC,KAAMC,KAEDW,MAAQ,CACXwB,KAAM,GACNC,SAAU,GACVC,OAAQ,cAEdR,EAAKS,iBAAmBT,EAAKS,iBAAiBC,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACxBA,EAAKY,qBAAuBZ,EAAKY,qBAAqBF,KAA1BT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAC5BA,EAAKa,aAAeb,EAAKa,aAAaH,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAVCA,qFAaM,IAAAc,EAAA5C,KACnB,OAAO+B,OAAOc,KAAKpB,GAAeJ,IAAI,SAAAyB,GACpC,IAAIC,EAAoBtB,EAAcqB,GACtC,OAAO5C,EAAAC,EAAAC,cAAA,MAAIC,UAAWuC,EAAKI,eAAeD,GAAoBE,QAASL,EAAKM,mBAAmBV,KAAKI,EAAMG,GAC1GxB,IAAKwB,GACFD,4CAKMA,GACb,OAAI9C,KAAKY,MAAM0B,SAAWQ,EACjB,SAEA,8CAIQA,GACjB9C,KAAKmD,SAAU,CAACb,OAAQQ,6CAGTM,GACfpD,KAAKmD,SAAU,CAACf,KAAMgB,EAAEC,OAAOC,qDAGZF,GACnBpD,KAAKmD,SAAU,CAACd,SAAUe,EAAEC,OAAOC,6CAGxBF,GACXpD,KAAKC,MAAMsD,WAAWvD,KAAKY,MAAMwB,KAAMpC,KAAKY,MAAMyB,SAAUrC,KAAKY,MAAM0B,QACvEc,EAAEI,kDAIJ,OACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UACGJ,KAAKyD,wBAGVvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAOsD,SAAU1D,KAAKuC,iBAAkBoB,YAAY,sBACpDzD,EAAAC,EAAAC,cAAA,SAAOsD,SAAU1D,KAAK0C,qBAAsBiB,YAAY,YAE1DzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAG6C,QAASjD,KAAK2C,aAAciB,KAAK,aAApC,qBA9DoB3C,IAAMC,WCqBf2C,EA7BF,CACbN,WADa,SACFnB,EAAMC,EAAUC,GACxB,OAAOwB,MAAK,sFAAAC,OAAuF3B,EAAvF,cAAA2B,OAAwG1B,EAAxG,aAAA0B,OAA4HzB,GAAU,CAC9I0B,QAAS,CACLC,cAAa,UAAAF,OANT,uIAQTG,KAAK,SAAAC,GACJ,OAAOA,EAASC,SACjBF,KAAK,SAAAG,GACN,GAAIA,EAAajD,WACb,OAAOiD,EAAajD,WAAWC,IAAI,SAAAtB,GAChC,MAAO,CACPyB,GAAIzB,EAASyB,GACbjB,SAAUR,EAASuE,UACnB7D,KAAMV,EAASU,KACfC,QAAQX,EAASsC,SAASkC,SAC1B5D,KAAMZ,EAASsC,SAAS1B,KACxBC,MAAOb,EAASsC,SAASzB,MACzBC,QAASd,EAASsC,SAASmC,SAC3B1D,SAAUf,EAAS0E,WAAW,GAAGC,MACjC3D,OAAQhB,EAASgB,OACjBC,YAAajB,EAAS4E,oBCanBC,cA1Bb,SAAAA,EAAY3E,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA4E,IACjB9C,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAA6C,GAAAzC,KAAAnC,KAAMC,KACDW,MAAQ,CACXQ,WAAY,IAEdU,EAAKyB,WAAazB,EAAKyB,WAAWf,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALDA,0EAQRM,EAAMC,EAAUC,GAAQ,IAAAM,EAAA5C,KACjC6D,EAAKN,WAAWnB,EAAMC,EAAUC,GAAQ4B,KAAK,SAAC9C,GAC5CwB,EAAKO,SAAS,CAAE/B,WAAYA,uCAM9B,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACyE,EAAD,CAAWtB,WAAYvD,KAAKuD,aAC5BrD,EAAAC,EAAAC,cAAC0E,EAAD,CAAc1D,WAAYpB,KAAKY,MAAMQ,qBArB3BH,IAAMC,WCGJ6D,QACW,cAA7BC,OAAO3C,SAAS4C,UAEe,UAA7BD,OAAO3C,SAAS4C,UAEhBD,OAAO3C,SAAS4C,SAASC,MACvB,2DCZNC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,KAAK,SAAAyB,GACjCA,EAAaC","file":"static/js/main.46153ff2.chunk.js","sourcesContent":["import React from 'react';\nimport  './Business.css';\n\n\nclass Business extends React.Component {\n   render(){\n     const { business } = this.props;\n   return (\n    <div className=\"Business\">\n    <div className=\"image-container\">\n      <img src={business.imageSrc} alt=''/>\n    </div>\n    <h2>{business.name}</h2>\n    <div className=\"Business-information\">\n      <div className=\"Business-address\">\n        <p>{business.address}</p>\n        <p>{business.city}</p>\n        <p>{business.state} {business.zipCode}</p>\n      </div>\n      <div className=\"Business-reviews\">\n        <h3>{business.category}</h3>\n        <h3 className=\"rating\">{business.rating}</h3>\n        <p>{business.reviewCount}</p>\n      </div>\n    </div>\n  </div>\n   );\n  }\n};\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n    render() {  \n    return (\n        <div className=\"BusinessList\">\n          {\n            this.props.businesses.map((business) => {\n              return <Business key={business.id} business={business} />;\n            })\n          }\n        </div>\n    );\n  }\n};\n\nexport default BusinessList;\n\n","import React from 'react';\nimport './SearchBar.css';\n\n\nconst sortByOptions = {\n    'Best Match' : 'best_match',\n    'Highest Rated': 'rating', \n    'Most Reviewed': 'review_count'\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\nthis.handleTermChange = this.handleTermChange.bind(this);\nthis.handleLocationChange = this.handleLocationChange.bind(this);\nthis.handleSearch = this.handleSearch.bind(this);\n  }\n\n    renderSortByOptions () {\n        return Object.keys(sortByOptions).map(sortByOption => {\n          let sortByOptionValue = sortByOptions[sortByOption];\n          return <li className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)} \n          key={sortByOptionValue}>\n            {sortByOption}\n          </li>\n        });\n    }\n\n    getSortByClass(sortByOption) {\n      if (this.state.sortBy === sortByOption) {\n        return 'active';\n      } else { \n        return '';\n      }\n    }\n\n    handleSortByChange(sortByOption) {\n      this.setState ({sortBy: sortByOption})\n    }\n\n    handleTermChange(e) {\n      this.setState ({term: e.target.value});\n    }\n\n    handleLocationChange(e) {\n      this.setState ({location: e.target.value})\n    }\n\n    handleSearch(e) {\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n      e.preventDefault();\n    }\n\n    render() {\n    return (\n        <div className=\"SearchBar\">\n  <div className=\"SearchBar-sort-options\">\n    <ul>\n      {this.renderSortByOptions()}\n    </ul>\n  </div>\n  <div className=\"SearchBar-fields\">\n    <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\n    <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\n  </div>\n  <div className=\"SearchBar-submit\">\n    <a onClick={this.handleSearch} href=\"www.#.com\">Let's Go</a>\n  </div>\n</div>\n    );\n  }\n};\n\nexport default SearchBar;","const apiKey = 'QLLr9TTLjc3rBAkfUJJk6Uz2vooIW_jbo2QDP1D3JTolk5bCoN3uH4C1fC7Xz73VGSlSnhFZRfInnmaIW5dhYeJ2HiPNZsVQhvt3FwXtPcImqMnN5wnMevGkntasXHYx';\n\nconst Yelp = {\nsearchYelp(term, location, sortBy){\n   return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n       headers: {\n           Authorization: `Bearer ${apiKey}`,\n       },\n   }).then(response => {\n       return response.json();\n   }).then(jsonResponse => {\n     if (jsonResponse.businesses) {\n         return jsonResponse.businesses.map(business => {\n            return {\n            id: business.id,\n            imageSrc: business.image_url,\n            name: business.name,\n            address:business.location.address1,\n            city: business.location.city,\n            state: business.location.state,\n            zipCode: business.location.zip_code,\n            category: business.categories[0].title,\n            rating: business.rating,\n            reviewCount: business.review_count,\n            }\n         })\n     } \n   })\n}\n};\n\nexport default Yelp; ","import React from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from './util/Yelp'\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.searchYelp(term, location, sortBy).then((businesses) => {\n      this.setState({ businesses: businesses });\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}